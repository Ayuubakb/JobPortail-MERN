{"ast":null,"code":"const check = async (setUserType, setId) => {\n  const response = await fetch(process.env.REACT_APP_SERVER_URI + \"Authentification/check\", {\n    method: \"GET\",\n    credentials: 'include'\n  });\n  await response.json().then(res => {\n    setTimeout(() => {\n      setUserType(res.type);\n      setId(res.id);\n    }, 2000);\n  });\n};\nconst login = async (inputs, setError) => {\n  const response = await fetch(process.env.REACT_APP_SERVER_URI + \"Authentification/login\", {\n    method: \"POST\",\n    credentials: 'include',\n    body: JSON.stringify(inputs),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  await response.json().then(res => {\n    setError(res.msg);\n  });\n};\nconst checkExists = async (inputs, setErr) => {\n  const response = await fetch(process.env.REACT_APP_SERVER_URI + \"Authentification/checkExist\", {\n    method: \"POST\",\n    credentials: 'include',\n    body: JSON.stringify(inputs),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  await response.json().then(res => {\n    setErr(res.msg);\n  });\n};\nconst signup = async (inputs, setError) => {\n  const response = await fetch(process.env.REACT_APP_SERVER_URI + \"Authentification/signup\", {\n    method: \"POST\",\n    credentials: 'include',\n    body: JSON.stringify(inputs),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  await response.json().then(res => {\n    setError(res.msg);\n  });\n};\nconst logout = async setErr => {\n  const response = await fetch(process.env.REACT_APP_SERVER_URI + \"Authentification/logout\", {\n    method: \"DELETE\",\n    credentials: 'include'\n  });\n  await response.json().then(res => {\n    setErr(res.msg);\n  });\n};\nmodule.exports = {\n  signup,\n  login,\n  logout,\n  check,\n  checkExists\n};","map":{"version":3,"names":["check","setUserType","setId","response","fetch","process","env","REACT_APP_SERVER_URI","method","credentials","json","then","res","setTimeout","type","id","login","inputs","setError","body","JSON","stringify","headers","msg","checkExists","setErr","signup","logout","module","exports"],"sources":["C:/Users/ayoub/CodSoft/JobPortail/front/src/Controllers/authControllers.js"],"sourcesContent":["\r\nconst check=async(setUserType,setId)=>{\r\n    const response=await fetch(process.env.REACT_APP_SERVER_URI+\"Authentification/check\",{\r\n        method:\"GET\",\r\n        credentials:'include'\r\n    })\r\n    await response.json().then((res)=>{\r\n        setTimeout(()=>{\r\n\r\n            setUserType(res.type)\r\n            setId(res.id)\r\n        },2000)\r\n    })\r\n}\r\n\r\nconst login=async(inputs,setError)=>{\r\n    const response=await fetch(process.env.REACT_APP_SERVER_URI+\"Authentification/login\",{\r\n        method:\"POST\",\r\n        credentials:'include',\r\n        body:JSON.stringify(inputs),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    await response.json().then((res)=>{\r\n        setError(res.msg)\r\n    })\r\n}\r\n\r\nconst checkExists=async(inputs,setErr)=>{\r\n    const response=await fetch(process.env.REACT_APP_SERVER_URI+\"Authentification/checkExist\",{\r\n        method:\"POST\",\r\n        credentials:'include',\r\n        body:JSON.stringify(inputs),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    await response.json().then((res)=>{\r\n        setErr(res.msg)\r\n    })\r\n}\r\nconst signup=async(inputs,setError)=>{\r\n    const response=await fetch(process.env.REACT_APP_SERVER_URI+\"Authentification/signup\",{\r\n        method:\"POST\",\r\n        credentials:'include',\r\n        body:JSON.stringify(inputs),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n    await response.json().then((res)=>{\r\n        setError(res.msg)\r\n    })\r\n}\r\n\r\nconst logout=async(setErr)=>{\r\n    const response=await fetch(process.env.REACT_APP_SERVER_URI+\"Authentification/logout\",{\r\n        method:\"DELETE\",\r\n        credentials:'include'\r\n    })\r\n    await response.json().then((res)=>{\r\n        setErr(res.msg)\r\n    })\r\n}\r\nmodule.exports={\r\n    signup,\r\n    login,\r\n    logout,\r\n    check, \r\n    checkExists\r\n}"],"mappings":"AACA,MAAMA,KAAK,GAAC,MAAAA,CAAMC,WAAW,EAACC,KAAK,KAAG;EAClC,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAC,wBAAwB,EAAC;IACjFC,MAAM,EAAC,KAAK;IACZC,WAAW,EAAC;EAChB,CAAC,CAAC;EACF,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAG;IAC9BC,UAAU,CAAC,MAAI;MAEXZ,WAAW,CAACW,GAAG,CAACE,IAAI,CAAC;MACrBZ,KAAK,CAACU,GAAG,CAACG,EAAE,CAAC;IACjB,CAAC,EAAC,IAAI,CAAC;EACX,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,KAAK,GAAC,MAAAA,CAAMC,MAAM,EAACC,QAAQ,KAAG;EAChC,MAAMf,QAAQ,GAAC,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAC,wBAAwB,EAAC;IACjFC,MAAM,EAAC,MAAM;IACbC,WAAW,EAAC,SAAS;IACrBU,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC;IAC3BK,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;EACF,MAAMnB,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAG;IAC9BM,QAAQ,CAACN,GAAG,CAACW,GAAG,CAAC;EACrB,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,WAAW,GAAC,MAAAA,CAAMP,MAAM,EAACQ,MAAM,KAAG;EACpC,MAAMtB,QAAQ,GAAC,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAC,6BAA6B,EAAC;IACtFC,MAAM,EAAC,MAAM;IACbC,WAAW,EAAC,SAAS;IACrBU,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC;IAC3BK,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;EACF,MAAMnB,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAG;IAC9Ba,MAAM,CAACb,GAAG,CAACW,GAAG,CAAC;EACnB,CAAC,CAAC;AACN,CAAC;AACD,MAAMG,MAAM,GAAC,MAAAA,CAAMT,MAAM,EAACC,QAAQ,KAAG;EACjC,MAAMf,QAAQ,GAAC,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAC,yBAAyB,EAAC;IAClFC,MAAM,EAAC,MAAM;IACbC,WAAW,EAAC,SAAS;IACrBU,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC;IAC3BK,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;EACF,MAAMnB,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAG;IAC9BM,QAAQ,CAACN,GAAG,CAACW,GAAG,CAAC;EACrB,CAAC,CAAC;AACN,CAAC;AAED,MAAMI,MAAM,GAAC,MAAMF,MAAM,IAAG;EACxB,MAAMtB,QAAQ,GAAC,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAC,yBAAyB,EAAC;IAClFC,MAAM,EAAC,QAAQ;IACfC,WAAW,EAAC;EAChB,CAAC,CAAC;EACF,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAG;IAC9Ba,MAAM,CAACb,GAAG,CAACW,GAAG,CAAC;EACnB,CAAC,CAAC;AACN,CAAC;AACDK,MAAM,CAACC,OAAO,GAAC;EACXH,MAAM;EACNV,KAAK;EACLW,MAAM;EACN3B,KAAK;EACLwB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}